name: tests

on:
  push:
    branches: [ "master", "develop", "postgres-prototype" ]
  pull_request:
    branches: [ "develop", "postgres-prototype" ]

jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest"]
        go-version: [ "1.18" ]
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Setup PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      -
        name: setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      -
        name: checkout
        uses: actions/checkout@v3
      -
        name: simple test
        run: go test -v ./...
        env:
          PG_DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
      -
        name: test with GC pressure
        run: go test -v ./...
        env:
          GOGC: 1
          PG_DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
      -
        name: test with race detector
        run: go test -v -race ./...
        env:
          PG_DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Setup PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      - name: checkout
        uses: actions/checkout@v3
      - name: measure coverage
        run: go test -v -coverprofile=coverage.out ./...
        env:
          PG_DATABASE_URL: ${{ steps.postgres.outputs.connection-uri }}
      - name: report coverage
        run: |
          bash <(curl -s https://codecov.io/bash)
